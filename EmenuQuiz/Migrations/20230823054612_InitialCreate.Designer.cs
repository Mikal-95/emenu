// <auto-generated />
using System;
using EmenuQuiz.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmenuQuiz.Migrations
{
    [DbContext(typeof(MySqlDbContext))]
    [Migration("20230823054612_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("USING_NLS_COMP")
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EmenuQuiz.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10)
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("EmenuQuiz.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10)
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<long>("ImageSize")
                        .HasPrecision(10)
                        .HasColumnType("bigint")
                        .HasColumnName("image_size");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("image_url");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("ProductId")
                        .HasPrecision(10)
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<string>("PublicId")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("public_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Image", (string)null);
                });

            modelBuilder.Entity("EmenuQuiz.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10)
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal>("Cost")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("cost");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("description");

                    b.Property<string>("InvNumber")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("inventory_number");

                    b.Property<decimal>("Price")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("price");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("EmenuQuiz.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10)
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("CategoryId")
                        .HasPrecision(10)
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int>("ProductId")
                        .HasPrecision(10)
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategory", (string)null);
                });

            modelBuilder.Entity("EmenuQuiz.Models.ProductTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10)
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Lang")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("lang");

                    b.Property<int>("ProductId")
                        .HasPrecision(10)
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<string>("Value")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductTranslation", (string)null);
                });

            modelBuilder.Entity("EmenuQuiz.Models.Image", b =>
                {
                    b.HasOne("EmenuQuiz.Models.Product", "Product")
                        .WithMany("images")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("Image_FK");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EmenuQuiz.Models.ProductCategory", b =>
                {
                    b.HasOne("EmenuQuiz.Models.Category", "Category")
                        .WithMany("productCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("ProductCategory_FK_1");

                    b.HasOne("EmenuQuiz.Models.Product", "Product")
                        .WithMany("productCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("ProductCategory_FK");

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EmenuQuiz.Models.ProductTranslation", b =>
                {
                    b.HasOne("EmenuQuiz.Models.Product", "Product")
                        .WithMany("productTranslations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("ProductTranslation_FK");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EmenuQuiz.Models.Category", b =>
                {
                    b.Navigation("productCategories");
                });

            modelBuilder.Entity("EmenuQuiz.Models.Product", b =>
                {
                    b.Navigation("images");

                    b.Navigation("productCategories");

                    b.Navigation("productTranslations");
                });
#pragma warning restore 612, 618
        }
    }
}
